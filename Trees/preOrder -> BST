
class Solution {
  public:
  
    Node* helper(int i, int preOrder[], int mini, int maxi, int n)
    {
        if(i>=n)
        {
            return NULL;
        }
        if(preOrder[i]<mini || preOrder[i]>maxi)
            return NULL;
        
        int a = preOrder[i];
        Node* root = new Node(a);
        
        root->left = helper(i+1,preOrder,mini,preOrder[i]-1);
        root->right = helper(i+1,preOrder,preOrder[i]+1,maxi);
        
        return root;
    }
  
    // Function that constructs BST from its preorder traversal.
    Node* Bst(int pre[], int size) {
        // code here
        if(size==0)
            return NULL;
        return helper(0,pre,INT_MIN,INT_MAX,size);
    }
};
