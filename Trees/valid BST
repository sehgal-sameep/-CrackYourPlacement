/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int maxvalue(TreeNode*root)
    {
        if(root==NULL) return INT_MIN;

        int value=root->val;
        int leftans=maxvalue(root->left);
        int rightans=maxvalue(root->right);
        return max(value,max(leftans,rightans));
    }

    int minvalue(TreeNode*root)
    {
        if(root==NULL) return INT_MAX;

        int value=root->val;
        int leftans=minvalue(root->left);
        int rightans=minvalue(root->right);
        return min(value,min(leftans,rightans));
    }

    bool isValidBST(TreeNode* root) {
        if(root==NULL) return true;

        if(root->left!=NULL && root->val<=maxvalue(root->left))
        {
            return false;
        }
        if(root->right!=NULL && root->val>=minvalue(root->right))
        {
            return false;
        }
        return isValidBST(root->left) && isValidBST(root->right);
    }
};
