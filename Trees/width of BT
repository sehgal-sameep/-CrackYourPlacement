/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    typedef unsigned long long ll;
    int widthOfBinaryTree(TreeNode* root) {
        ll maxi=0;
        if(root==NULL)
            return maxi;
        queue<pair<TreeNode*,ll>>q;
        q.push({root,0});

        while(!q.empty())
        {
            ll n=q.size();
            ll start,end;
            for(int i=0;i<n;i++)
            {
                TreeNode* node=q.front().first;
                ll idx=q.front().second;
                q.pop();
                if(node->left)
                    q.push({node->left,2*idx+1});
                if(node->right)
                    q.push({node->right,2*idx+2});
                if(i==0)
                    start=idx;
                if(i==n-1)
                    end=idx;
            }
            maxi=max(maxi,end-start+1);
        }
        return maxi;
    }
};
